name: Docker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Check database connectivity
        run: |
          until docker exec -it db pg_isready -U ${{ secrets.SPRING_DATASOURCE_USERNAME }} -d ${{ secrets.POSTGRES_DB }}; do
            echo "Waiting for PostgreSQL to become available..."
            sleep 5
          done
        env:
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

      - name: Build and run Docker Compose
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          SECURITY_USER_NAME: ${{ secrets.SECURITY_USER_NAME }}
          SECURITY_USER_PASSWORD: ${{ secrets.SECURITY_USER_PASSWORD }}
          JWTSECRET: ${{ secrets.JWTSECRET }}
        run: |
          docker compose -f docker-compose.yml down
          docker compose -f docker-compose.yml up --build --no-cache -d

      - name: Remove old Docker containers
        run: |
          docker ps -a -q --filter "status=exited" | xargs -r docker rm
          docker volume prune -f
          docker image prune -f
