name: Docker Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build JAR file and prepare properties
        run: |
          mvn clean package -DskipTests
          echo "${{ secrets.APPLICATION_PROD_PROPERTIES }}" > src/main/resources/application-prod.properties
          cp src/main/resources/application-prod.properties src/main/resources/application.properties

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Create deployment package
        run: |
          tar -czf backend.tar.gz \
            docker-compose.yml \
            Dockerfile \
            src/main/resources/application-prod.properties \
            src/main/resources/application.properties \
            target/erp-backend-1.0-SNAPSHOT.jar \
            .env \
            docker/backup/backup.dump \
            .github/workflows/prometheus.yml

      - name: Copy files to EC2
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "backend.tar.gz"
          target: "/home/ubuntu/erp-backend"
          timeout: 120s

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/erp-backend
            tar -xzf backend.tar.gz
            rm -f backend.tar.gz
            

            mkdir -p /home/ubuntu/erp-backend/docker/backup
            mv backup.dump /home/ubuntu/erp-backend/docker/backup/backup.dump || true
            docker-compose down --remove-orphans || true
            docker-compose up --build -d 
            docker-compose ps

            docker system prune -af --volumes
            docker image prune -f
          timeout: 300s

      - name: Verify deployment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/erp-backend
            
            RUNNING_CONTAINERS=$(docker-compose ps --services --filter "status=running" | wc -l)
            
            if [ "$RUNNING_CONTAINERS" -eq 0 ]; then
              echo "Falha na implantacao: nenhum conteiner est√° em execucao"
              docker-compose logs
              exit 1
            fi
            
            echo "Deploy finalizado com sucesso"
          timeout: 60s

      - name: Clean up local Docker resources
        if: always()
        run: |
          docker system prune -af
          docker volume prune -f
          docker image prune -f