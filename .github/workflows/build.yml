name: Docker Deployment

on:
  release:
    types: [published]  # Roda apenas quando uma release Ã© publicada

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build JAR file
        run: |
          mvn clean package -DskipTests

      - name: Create application-prod.properties from secrets
        run: |
          echo "${{ secrets.APPLICATION_PROD_PROPERTIES }}" > src/main/resources/application-prod.properties

      - name: Compress necessary files
        run: |
          mkdir temp_dir

          cp docker-compose.yml Dockerfile temp_dir/
          cp src/main/resources/application-prod.properties src/main/resources/application.properties temp_dir/
          cp target/erp-backend-1.0-SNAPSHOT.jar temp_dir/
          cp .env temp_dir/
          cp docker/backup/backup.dump temp_dir/
          cp .github/workflows/prometheus.yml temp_dir/
          tar -czf backend.tar.gz -C temp_dir .
          
          rm -rf temp_dir

      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "backend.tar.gz"
          target: "/home/ubuntu/erp-backend"

      - name: Uncompress files on EC2 and move backup.dump
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/erp-backend
            tar -xzf backend.tar.gz
            rm -f backend.tar.gz
            
            mkdir -p /home/ubuntu/erp-backend/docker/backup
            rm -f /home/ubuntu/erp-backend/docker/backup/backup.dump
            mv backup.dump /home/ubuntu/erp-backend/docker/backup/backup.dump

      - name: SSH to EC2 and run Docker Compose
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/erp-backend
            docker-compose up --build --no-deps -d

      - name: Verify Docker Compose up success on EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/erp-backend
            docker-compose ps

      - name: Clean up unused volumes and images locally
        run: |
          docker system prune -af

      - name: Remove old Docker containers locally
        run: |
          docker ps -a -q --filter "status=exited" | xargs -r docker rm
          docker volume prune -f
          docker image prune -f