services:
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://${SPRING_DATASOURCE_USERNAME}:${SPRING_DATASOURCE_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - db
    env_file:
      - .env

  prometheus:
    image: prom/prometheus:v2.51.2
    container_name: prometheus
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - api

  loki:
    command:
      - --config.file=/mnt/config/loki.yaml
    container_name: loki
    image: grafana/loki:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 3100
        published: "3100"
        protocol: tcp
    volumes:
      - type: bind
        source: /home/ubuntu/erp-backend/loki.yaml
        target: /mnt/config/loki.yaml
        bind:
          create_host_path: true

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./logs:/var/log
      - ./promtail.yml:/mnt/config/promtail.yaml
    command: --config.file=/mnt/config/promtail.yaml
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:10.3.1
    container_name: grafana
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  db:
    image: postgres:17.2
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ./docker/backup/backup.dump:/docker-entrypoint-initdb.d/backup.dump
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${SPRING_DATASOURCE_USERNAME} -d ${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      timeout: 5s

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SERVER_PORT: ${SERVER_PORT}
      SECURITY_USER_NAME: ${SECURITY_USER_NAME}
      SECURITY_USER_PASSWORD: ${SECURITY_USER_PASSWORD}
      jwtSecret: ${JWTSECRET}
    env_file:
      - .env
    volumes:
      - ./logs:/var/log

volumes:
  pg-data:
  prometheus-data:
  grafana-data:
  loki-data: